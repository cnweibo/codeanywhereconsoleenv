[user]
	name = cnweibo
	email = matiascx@163.com
[core]
	autocrlf = true
	filemode = false
	longpaths = true
	safecrlf = false
[color]
	ui = true
[alias]
	lg = log --oneline --decorate --all --graph
	lga = log --oneline --all --decorate --graph --pretty=format:"%h %an %s"
	# log with simplified  only first parent is listed
	lgs = log --oneline --decorate --all --graph --first-parent
	s = status -sb
	a = add
	r = reset
	ci = commit -m
	r1 = reset HEAD~1
	co = checkout
	# create a local branch for remote tracking <upstream/branch>
	cot = checkout --track
	dev = checkout develop
	master = checkout master
	rs = remote show
	fl = flow feature list -v
        fs = flow feature start --showcommands
	ff = flow feature finish --showcommands
	hl = flow hotfix list -v
	hs = flow hotfix start --showcommands
	hf = flow hotfix finish --showcommands
	rell = flow release list -v
	rels = flow release start --showcommands
	relf = flow release finish --showcommands	
	bl = flow bugfix list -v
	bs = flow bugfix start --showcommands
	bf = flow bugfix finish --showcommands	
	sl = flow support list -v
	ss = flow support start --showcommands
	sf = flow support finish --showcommands	
	flowlog = flow log --showcommands
	fon = flow feature checkout 
	fdel = flow feature delete
	showf = show --pretty=format: --name-only
	conflicts = diff --name-only --diff-filter=U
	checkignore = check-ignore -v
	branchstatus = branch -vv -a 
	filterauthor = log --author
	filtercommit = log --oneline --grep
	showfilehistory = log --follow
	changedby = blame -w 
	fhistory = log --
	faddedat = log --diff-filter=A --
	# check update info against remote
	rs = remote show
	# change the remote repo url
	rsu = remote set-url
	#forget local change
	flc = update-index --assume-unchanged
	uflc = update-index --no-assume-unchanged
	#list forget local changes
	lflc = ! git ls-files -v|grep '^h'
	trash = stash -u
	sweepout = ! git stash && git stash clear
	alias = config --get-regexp alias
	dw = diff --word-diff
	db = diff --name-only
	#not merged commits list on master
	nmclm = ! git rev-list --all --not master --no-merges | xargs -L1 git name-rev | grep -E '[0-9a-f]{40}' 
	#not merged commits list on develop
	nmcld = ! git rev-list --all --not develop --no-merges | xargs -L1 git name-rev | grep -E '[0-9a-f]{40}'
	# commit hash for which branch(para: hashID)?
	cfb = name-rev --name-only 
	# return branch tip commit :parameter: <branch>
	btc = rev-parse
	# return base ancestor commit <branch> <branchedOffBranch> 
	bac = merge-base
	# find tag for a commit <commit>
	tfc = describe --tags
	# cancel a in-progress merge(normally will with a conflict)
	ma = merge --abort
	
[push]
	default = simple
[pull]
        rebase = preserve
[rerere]
	enabled = true
[merge "ours"]
	driver = true
[diff]
    tool = bc2
[difftool]
    prompt = false
[difftool "bc2"]
    cmd =  'd:/GBackup/softwareback/BeyondCompare2/Beyond Compare 2/BC2.exe' "$LOCAL" "$REMOTE"
[merge]
    tool = bc2
[mergetool]
    prompt = false
[mergetool "bc2"]
    #trustExitCode = true
    cmd = 'd:/GBackup/softwareback/BeyondCompare2/Beyond Compare 2/BC2.exe' -merge -result="$PWD/$MERGED" "$PWD/$LOCAL" "$PWD/$BASE" "$PWD/$REMOTE"
